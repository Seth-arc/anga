import React from 'react';
import { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';
import { TeachingStyle, TeachingStyleResults } from '../types';

// First, we'll create our PDF-specific styles
const pdfStyles = StyleSheet.create({
  page: {
    padding: 40,
    fontFamily: 'Helvetica',
    backgroundColor: '#FFFFFF',
  },
  headerContainer: {
    marginBottom: 20,
  },
  headerText: {
    fontSize: 24,
    marginBottom: 10,
    color: '#2E294E',
  },
  dateText: {
    fontSize: 14,
    color: '#4A4E69',
    marginBottom: 20,
  },
  mainContainer: {
    marginBottom: 20,
  },
  containerTitle: {
    fontSize: 18,
    color: '#2E294E',
    marginBottom: 10,
  },
  teachingStyleName: {
    fontSize: 16,
    color: '#1B998B',
    marginBottom: 5,
  },
  descriptionText: {
    fontSize: 12,
    color: '#4A4E69',
    lineHeight: 1.5,
    marginBottom: 10,
  },
  scoreContainer: {
    flexDirection: 'row',
    marginBottom: 5,
  },
  scoreValue: {
    fontSize: 12,
    color: '#4A4E69',
  },
  footerContainer: {
    position: 'absolute',
    bottom: 40,
    left: 40,
    right: 40,
    fontSize: 10,
    color: '#4A4E69',
    textAlign: 'center',
  }
});

// Define the props interface for our PDF component
interface ResultsPDFProps {
  results: TeachingStyleResults;
  mainStyle: TeachingStyle;
  orderedStyles: Array<TeachingStyle & { score: number }>;
}

// Create the PDF component with proper type handling
const ResultsPDF: React.FC<ResultsPDFProps> = ({ results, mainStyle, orderedStyles }) => {
  const currentDate = new Date().toLocaleDateString();

  return (
    <Document>
      <Page size="A4" style={pdfStyles.page}>
        {/* Header Section */}
        <View style={pdfStyles.headerContainer}>
          <Text style={pdfStyles.headerText}>Teaching Style Profile</Text>
          <Text style={pdfStyles.dateText}>
            Assessment Date: {currentDate}
          </Text>
        </View>

        {/* Main Style Section */}
        <View style={pdfStyles.mainContainer}>
          <Text style={pdfStyles.containerTitle}>Your Dominant Teaching Style</Text>
          <Text style={pdfStyles.teachingStyleName}>{mainStyle.name}</Text>
          <Text style={pdfStyles.descriptionText}>{mainStyle.description}</Text>
          <View style={pdfStyles.scoreContainer}>
            <Text style={pdfStyles.scoreValue}>
              Strength: {results[mainStyle.id]}%
            </Text>
          </View>
        </View>

        {/* Complete Profile Section */}
        <View style={pdfStyles.mainContainer}>
          <Text style={pdfStyles.containerTitle}>Complete Teaching Style Profile</Text>
          {orderedStyles.map(style => (
            <View key={style.id} style={{ marginBottom: 15 }}>
              <Text style={pdfStyles.teachingStyleName}>{style.name}</Text>
              <Text style={pdfStyles.descriptionText}>{style.description}</Text>
              <View style={pdfStyles.scoreContainer}>
                <Text style={pdfStyles.scoreValue}>
                  Strength: {style.score}%
                </Text>
              </View>
            </View>
          ))}
        </View>

        {/* Development Recommendations */}
        <View style={pdfStyles.mainContainer}>
          <Text style={pdfStyles.containerTitle}>Development Recommendations</Text>
          <Text style={pdfStyles.descriptionText}>
            Based on your profile, consider focusing on the following areas:
          </Text>
          {orderedStyles.slice(0, 2).map(style => (
            <Text key={style.id} style={pdfStyles.descriptionText}>
              • Leverage your strength in {style.name.toLowerCase()}
            </Text>
          ))}
        </View>

        {/* Footer */}
        <View style={pdfStyles.footerContainer}>
          <Text>
            Generated by Anga | Based on the Staffordshire Evaluation of Teaching Styles (SETS)©
          </Text>
        </View>
      </Page>
    </Document>
  );
};

export default ResultsPDF;