import React from 'react';
import {
  Document,
  Page,
  Text,
  View,
  Font
} from '@react-pdf/renderer';
import { TeachingStyle } from '../types';
import { pdfStyles } from '../styles/pdfStyles';

// Register fonts for PDF rendering
Font.register({
  family: 'Poppins',
  src: 'https://fonts.gstatic.com/s/poppins/v20/pxiEyp8kv8JHgFVrFJDUc1NECPY.ttf',
});

Font.register({
  family: 'OpenSans',
  src: 'https://fonts.gstatic.com/s/opensans/v29/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-mu0SC55I.ttf',
});

interface ResultsPDFProps {
  results: Record<number, number>;
  mainStyle: TeachingStyle;
  styles: Array<TeachingStyle & { score: number }>;
  assessmentDate?: Date;
}

const ResultsPDF: React.FC<ResultsPDFProps> = ({
  results,
  mainStyle,
  styles,
  assessmentDate = new Date(),
}) => {
  return (
    <Document>
      <Page size="A4" style={pdfStyles.page}>
        {/* Title Section */}
        <View style={pdfStyles.container}>
          <Text style={pdfStyles.titleText}>Teaching Style Profile</Text>
          <Text style={pdfStyles.normalText}>
            Based on the Staffordshire Evaluation of Teaching Styles (SETS)©
          </Text>
          <Text style={pdfStyles.normalText}>
            Assessment Date: {assessmentDate.toLocaleDateString()}
          </Text>
        </View>

        {/* Dominant Style Section */}
        <View style={pdfStyles.container}>
          <Text style={pdfStyles.subtitleText}>Your Dominant Teaching Style</Text>
          <View style={pdfStyles.scoreRow}>
            <Text style={pdfStyles.styleTitleText}>{mainStyle.name}</Text>
            <Text style={pdfStyles.scoreText}>{results[mainStyle.id]}%</Text>
          </View>
          <Text style={pdfStyles.normalText}>{mainStyle.description}</Text>
        </View>

        <View style={pdfStyles.dividerLine} />

        {/* Complete Profile Section */}
        <View style={pdfStyles.container}>
          <Text style={pdfStyles.subtitleText}>Complete Teaching Style Profile</Text>
          {styles.map((style) => (
            <View key={style.id} style={pdfStyles.container}>
              <View style={pdfStyles.scoreRow}>
                <Text style={pdfStyles.styleTitleText}>{style.name}</Text>
                <Text style={pdfStyles.scoreText}>{style.score}%</Text>
              </View>
              <Text style={pdfStyles.normalText}>{style.description}</Text>
            </View>
          ))}
        </View>

        {/* Recommendations Section */}
        <View style={pdfStyles.container}>
          <Text style={pdfStyles.subtitleText}>Development Recommendations</Text>
          <Text style={pdfStyles.normalText}>
            Based on your profile, consider the following suggestions for professional development:
          </Text>
          <Text style={pdfStyles.normalText}>
            • Focus on leveraging your dominant style ({mainStyle.name}) while developing complementary approaches
          </Text>
          <Text style={pdfStyles.normalText}>
            • Explore opportunities to practice and strengthen your less preferred teaching styles
          </Text>
          <Text style={pdfStyles.normalText}>
            • Consider seeking mentorship or professional development in areas where you'd like to grow
          </Text>
        </View>

        {/* Footer */}
        <Text style={pdfStyles.footerText}>
          Generated by Anga - Teaching Styles Assessment Tool{'\n'}
          Based on SETS© by Mohanna, Chambers & Wall (2007)
        </Text>
      </Page>
    </Document>
  );
};

export default ResultsPDF;

export const generatePDF = async (props: ResultsPDFProps): Promise<Blob> => {
  const { pdf } = await import('@react-pdf/renderer');
  return pdf(<ResultsPDF {...props} />).toBlob();
};