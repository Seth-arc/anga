import React, { useEffect } from 'react';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import Container from '../components/Container';
import Button from '../components/Button';
import HexagonChart from '../components/HexagonChart';
import StyleStrengthsChart from '../components/StyleStrengthsChart';
import { useAssessment } from '../contexts/AssessmentContext';
import { useScoring } from '../hooks/useScoring';

const ResultsPage: React.FC = () => {
  const navigate = useNavigate();
  const { state } = useAssessment();
  const { results, mainStyle, orderedStyles, isComplete } = useScoring(state.answers);

  // Ensure users can't access results page without completing the assessment
  useEffect(() => {
    if (!isComplete) {
      navigate('/assessment');
    }
  }, [isComplete, navigate]);

  // Don't render anything while checking completion status
  if (!isComplete || !mainStyle) {
    return null;
  }

  // Handle downloading results as a text file
  const handleDownload = () => {
    // Create a formatted text representation of the results
    const resultsText = `
      Your Teaching Style Profile
      Generated by Anga - SETS© Assessment Tool

      Dominant Teaching Style:
      ${mainStyle.name} (${results[mainStyle.id]}%)
      ${mainStyle.description}

      Complete Style Profile:
      ${orderedStyles.map(style => 
        `\n${style.name} (${style.score}%)\n${style.description}`
      ).join('\n')}
    `.trim();

    // Create and trigger the download
    const blob = new Blob([resultsText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = 'teaching-style-profile.txt';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-cloud-white">
      <Container className="py-8">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="max-w-4xl mx-auto"
        >
          {/* Header Section */}
          <div className="text-center mb-12">
            <h1 className="text-3xl md:text-4xl font-poppins font-semibold text-deep-purple mb-4">
              Your Teaching Style Profile
            </h1>
            <p className="text-lg text-slate-grey">
              Based on the Staffordshire Evaluation of Teaching Styles (SETS)©
            </p>
          </div>

          {/* Dominant Style Card */}
          <div className="bg-white rounded-lg shadow-lg p-8 mb-8">
            <h2 className="text-xl font-poppins font-semibold text-deep-purple mb-4">
              Your Dominant Teaching Style
            </h2>
            <div className="flex items-start gap-6">
              <div className="flex-grow">
                <h3 className="text-lg font-medium text-teal-blue mb-2">
                  {mainStyle.name}
                </h3>
                <p className="text-slate-grey mb-4">
                  {mainStyle.description}
                </p>
              </div>
              <div className="text-right">
                <span className="text-3xl font-semibold text-teal-blue">
                  {results[mainStyle.id]}%
                </span>
              </div>
            </div>
          </div>

          {/* Visualization Grid */}
          <div className="grid md:grid-cols-2 gap-8 mb-8">
            <div className="bg-white rounded-lg shadow-lg p-8">
              <h2 className="text-xl font-poppins font-semibold text-deep-purple mb-6">
                Teaching Style Hexagon
              </h2>
              <HexagonChart results={results} />
            </div>
            <div className="bg-white rounded-lg shadow-lg p-8">
              <h2 className="text-xl font-poppins font-semibold text-deep-purple mb-6">
                Style Strengths
              </h2>
              <StyleStrengthsChart results={results} />
            </div>
          </div>

          {/* Detailed Analysis */}
          <div className="bg-white rounded-lg shadow-lg p-8 mb-8">
            <h2 className="text-xl font-poppins font-semibold text-deep-purple mb-6">
              Your Teaching Style Profile
            </h2>
            {orderedStyles.map(style => (
              <div key={style.id} className="mb-6 last:mb-0">
                <h3 className="text-lg font-medium text-deep-purple mb-2">
                  {style.name} ({style.score}%)
                </h3>
                <p className="text-slate-grey">
                  {style.description}
                </p>
              </div>
            ))}
          </div>

          {/* Action Buttons */}
          <div className="flex flex-wrap justify-center gap-4">
            <Button
              variant="primary"
              onClick={handleDownload}
            >
              Download Report
            </Button>
            <Button
              variant="outline"
              onClick={() => navigate('/')}
            >
              Start New Assessment
            </Button>
          </div>
        </motion.div>
      </Container>
    </div>
  );
};

export default ResultsPage;